name: Build and Version

on:
  push:
    branches:
      - main
      - 'release-*'
  pull_request:
    branches: [ '**' ]

env:
  PACKAGENAME_CAMELCASE: ValidationAttributes
  DEVELOPERS: 'qtlisec.maaz@gmail.com'
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/aspnet:8.0-alpine3.21
    steps:
      - name: Install bash, icu-libs, and git
        run: apk update && apk add bash icu-libs git

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: /root/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Set MinVerBuildMetadata
        run: echo "MinVerBuildMetadata=${GITHUB_RUN_ID}" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build *.Library -c Release --no-restore -o output

      - name: Test
        run: |
          dotnet test *.Test -c Release --no-build --settings coverlet.runsettings --logger "trx;LogFileName=unit_tests.xml" --collect:"XPlat Code Coverage" -o output || echo "There were failing tests!"

      - name: Determine version with MinVer
        id: minver
        run: |
          dotnet tool install --global minver-cli
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
          VERSION=$(dotnet minver -t v -d)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Pack NuGet package
        run: dotnet pack *.Library -c Release -o output

      - name: Publish NuGet package to GitHub Packages
        if: startsWith(github.ref, 'refs/heads/release-')
        run: dotnet nuget push output/*.nupkg --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.GITHUB_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: output/unit_tests.xml

      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: output/**/coverage.*

      - name: Set version for main branch (hybrid)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Hybrid version: ${{ steps.minver.outputs.version }}"

      - name: Set version for release branch (semantic)
        if: startsWith(github.ref, 'refs/heads/release-')
        run: |
          echo "Release version: ${{ steps.minver.outputs.version }}"

      - name: Tag release branch
        if: startsWith(github.ref, 'refs/heads/release-')
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.minver.outputs.version }}
          git push origin ${{ steps.minver.outputs.version }}
